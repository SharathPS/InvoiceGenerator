{"version":3,"sources":["decode.js","LineItemList.js","PDFService.js","App.js","useLocalStorage.ts","index.js"],"names":["textArea","document","createElement","encoded","innerHTML","value","LineItemList","index","event","this","props","onLineItemDescriptionChange","newDescription","target","onLineItemQuantityChange","newQuantity","onLineItemMtsChange","newMts","onLineItemRateChange","newRate","onLineItemDeleteClick","lineItems","reduce","sum","lineItem","setDefaultValue","quantity","rate","mts","key","sm","type","description","onChange","bind","style","paddingLeft","paddingRight","min","decode","format","currency","bsStyle","onClick","lineItemRows","map","renderLineItemRow","lineItemsTotal","getLineItemsTotal","onLineItemAddClick","Component","defaultProps","pdfMake","window","saveInvoicePDF","params","imageLogo","console","log","fileReader","FileReader","addEventListener","onDataURLLoaded","readAsDataURL","createPDFFromParams","result","docDefinition","notesAndTerms","buildNotesAndTerms","content","buildHeaderInformation","buildLineItemsTable","buildTotal","buildDocDefinition","createPdf","open","optionalDataKeys","optionalDataValues","Object","entries","Date","date","paymentTerms","dueDate","forEach","push","columns","stack","buildImageLogo","text","fromName","fontSize","margin","fromTown","fromGst","toName","invoiceNumber","width","alignment","columnGap","String","toFixed","buildLineItem","table","widths","headerRows","body","layout","total","notes","concat","terms","image","keys","symbols","emptyState","App","useState","editedInvoice","setEditedInvoice","initialValue","React","JSON","parse","localStorage","getItem","err","setItem","stringify","item","setValue","newValue","useLocalStorage","historyStates","setHistoryStates","onFieldValueChange","propertyName","newVal","stateUpdate","className","horizontal","controlId","componentClass","ControlLabel","rows","placeholder","splice","smOffset","dequal","slice","ReactDOM","render","getElementById"],"mappings":"yUAAMA,EAAWC,SAASC,cAAc,YACzB,WAASC,GAEtB,OADAH,EAASI,UAAYD,EACdH,EAASK,OCSZC,E,0LAC0BC,EAAOC,GAC/BC,KAAKC,MAAMC,4BAA4B,CACnCJ,MAAOA,EACPK,eAAgBJ,EAAMK,OAAOR,U,+CAIZE,EAAOC,GAC5BC,KAAKC,MAAMI,yBAAyB,CAChCP,MAAOA,EACPQ,YAAaP,EAAMK,OAAOR,U,0CAIdE,EAAOC,GACvBC,KAAKC,MAAMM,oBAAoB,CAC3BT,MAAOA,EACPU,OAAQT,EAAMK,OAAOR,U,2CAIRE,EAAOC,GACxBC,KAAKC,MAAMQ,qBAAqB,CAC5BX,MAAOA,EACPY,QAASX,EAAMK,OAAOR,U,4CAIRE,GAClBE,KAAKC,MAAMU,sBAAsB,CAC7Bb,MAAOA,M,wCAIGc,GAAY,IAAD,OACzB,OAAOA,EAAUC,QAAO,SAACC,EAAKC,GAC1B,OAAOD,EAAM,EAAKE,gBAAgBD,EAASE,UAAYF,EAASG,KAAO,EAAKF,gBAAgBD,EAASI,OACtG,K,sCAGSvB,GACZ,OAAiB,IAAVA,EAAc,EAAGA,I,wCAGVmB,EAAUjB,GACxB,OACI,kBAAC,IAAD,CAAKsB,IAAKtB,GACN,kBAAC,IAAD,CAAKuB,GAAI,GACL,kBAAC,IAAD,CACIC,KAAK,OACL1B,MAAOmB,EAASQ,YAChBC,SAAUxB,KAAKE,4BAA4BuB,KAAKzB,KAAMF,MAG9D,kBAAC,IAAD,CAAKuB,GAAI,EAAGK,MAAO,CAACC,YAAa,MAAOC,aAAc,QAClD,kBAAC,IAAD,CACIN,KAAK,SACLO,IAAK,EACLjC,MAAOmB,EAASE,SAChBO,SAAUxB,KAAKK,yBAAyBoB,KAAKzB,KAAMF,MAG3D,kBAAC,IAAD,CAAKuB,GAAI,EAAGK,MAAO,CAACC,YAAa,MAAOC,aAAc,QAClD,kBAAC,IAAD,CACIN,KAAK,SACLO,IAAK,EACLjC,MAAOmB,EAASI,IAChBK,SAAUxB,KAAKO,oBAAoBkB,KAAKzB,KAAMF,MAGtD,kBAAC,IAAD,CAAKuB,GAAI,EAAGK,MAAO,CAACC,YAAa,MAAOC,aAAc,QAClD,kBAAC,IAAD,CACIN,KAAK,SACLO,IAAK,EACLjC,MAAOmB,EAASG,KAChBM,SAAUxB,KAAKS,qBAAqBgB,KAAKzB,KAAMF,MAGvD,kBAAC,IAAD,CAAKuB,GAAI,GACJS,EACGC,iBAAO/B,KAAKgB,gBAAgBD,EAASI,KAAOnB,KAAKgB,gBAAgBD,EAASE,UACtEF,EAASG,KAAM,CACfc,SAAUhC,KAAKC,MAAM+B,aAIjC,kBAAC,IAAD,CAAKX,GAAI,GACL,kBAAC,IAAD,CACIY,QAAQ,SACRC,QAASlC,KAAKW,sBAAsBc,KAAKzB,KAAMF,IAFnD,S,+BAYZ,IAAIc,EAAYZ,KAAKC,MAAMW,UACvBuB,EAAevB,EAAUwB,IAAIpC,KAAKqC,kBAAkBZ,KAAKzB,OACzDsC,EAAiBtC,KAAKuC,kBAAkB3B,GAC5C,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKS,GAAI,GAAT,QACA,kBAAC,IAAD,CAAKA,GAAI,GAAT,YACA,kBAAC,IAAD,CAAKA,GAAI,GAAT,OACA,kBAAC,IAAD,CAAKA,GAAI,GAAT,QACA,kBAAC,IAAD,CAAKA,GAAI,GAAT,UACA,kBAAC,IAAD,CAAKA,GAAI,KAEZc,EACD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKd,GAAI,GACL,kBAAC,IAAD,CAAQY,QAAQ,UAAUC,QAASlC,KAAKC,MAAMuC,oBAA9C,oBAIJ,kBAAC,IAAD,CAAKnB,GAAI,IACT,kBAAC,IAAD,CAAKA,GAAI,IACT,kBAAC,IAAD,CAAKA,GAAI,GAAT,SACA,kBAAC,IAAD,CAAKA,GAAI,GACJS,EAAOC,iBAAOO,EAAgB,CAACN,SAAUhC,KAAKC,MAAM+B,aAEzD,kBAAC,IAAD,CAAKX,GAAI,U,GA9HFoB,aA+I3B5C,EAAa6C,aAAe,CACxB9B,UAAW,IAGAf,QC/JT8C,EAAUC,OAAOD,QAEhB,SAASE,EAAeC,GAC7B,GAAIA,EAAOC,UAAW,CACpBC,QAAQC,IAAI,YAAaH,EAAOC,WAChC,IAAIG,EAAa,IAAIC,WACrBD,EAAWE,iBACT,OACAC,EAAgB5B,KAAK,KAAMqB,EAAQI,IACnC,GAEFA,EAAWI,cAAcR,EAAOC,gBAEhCQ,EAAoBT,GAKxB,SAASO,EAAgBP,EAAQI,GAE/BJ,EAAOC,UAAYG,EAAWM,OAC9BD,EAAoBT,GAGtB,SAASS,EAAoBT,GAC3B,IAAIW,EAIN,SAA4BX,GAC1B,IAAIY,EAAgBC,EAAmBb,GAEvC,OADAE,QAAQC,IAAI,gBAAiBS,GACtB,CACLE,QAAQ,CACNC,EAAuBf,GACvBgB,EAAoBhB,GACpBiB,EAAWjB,IAHN,mBAIFa,EAAmBb,MAZNkB,CAAmBlB,GACvCH,EAAQsB,UAAUR,GAAeS,OAgBnC,SAASL,EAAuBf,GAC9B,IAAMqB,EAAmB,GACnBC,EAAqB,GAa3B,OAXAC,OAAOC,QAAQ,CACbC,KAAMzB,EAAO0B,KACb,gBAAiB1B,EAAO2B,aACxB,WAAY3B,EAAO4B,UAClBC,SAAQ,YAAmB,IAAD,mBAAhBvD,EAAgB,KAAXxB,EAAW,KACvBA,IACFuE,EAAiBS,KAAKxD,GACtBgD,EAAmBQ,KAAKhF,OAIrB,CACLiF,QAAS,CACP,CACEC,MAAM,GAAD,mBACAC,EAAejC,IADf,CAEH,CACEkC,KAAMlC,EAAOmC,SACbC,SAAU,GACVC,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpB,CACEH,KAAMlC,EAAOsC,SACbF,SAAU,GACVC,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpB,CACEH,KAAMlC,EAAOuC,QACbH,SAAU,GACVC,OAAQ,CAAC,EAAG,EAAG,GAAI,IAErB,CACEH,KAAM,UACNG,OAAQ,CAAC,EAAG,GAAI,EAAG,IAErB,CACEH,KAAMlC,EAAOwC,WAInB,CACER,MAAO,CACL,CACEE,KAAM,UACNE,SAAU,IAEZ,CACEF,KAAK,KAAD,OAAOlC,EAAOyC,eAClBL,SAAU,GACVC,OAAQ,CAAC,EAAG,EAAG,EAAG,KAEpB,CACEN,QAAS,CACP,CACEW,MAAO,GACPR,KAAM,IAER,CACEQ,MAAO,IACPX,QAAS,CACP,CACEC,MAAOX,EACPsB,UAAW,SAEb,CACEX,MAAOV,EACPqB,UAAW,cAOvBA,UAAW,UAIfC,UAAW,GACXP,OAAQ,CAAC,EAAG,EAAG,EAAG,KAItB,SAASrB,EAAoBhB,GAC3B,IAAIX,EAAeW,EAAOlC,UAAUwB,IAsEtC,SAAuBU,GACrB,OAAO,SAA8B/B,GACnC,MAAO,CACLA,EAASQ,YACT,CAAEyD,KAAMW,OAAO5E,EAASE,UAAWwE,UAAW,SAC9C,CAAET,KAAMW,OAAO5E,EAASI,KAAMsE,UAAW,SACzC,CAAET,KAAK,GAAD,OAAKjE,EAASG,MAAQuE,UAAW,SACvC,CACET,KAAK,GAAD,QAAMjE,EAASE,SAAWF,EAASG,KAAOH,EAASI,KAAKyE,QAAQ,GAAhE,YACF9C,EAAOd,UAETyD,UAAW,WAjFuBI,CAAc/C,IACtD,MAAO,CACLgD,MAAO,CACLC,OAAQ,CAAC,IAAI,MAAM,MAAM,MAAO,OAChCC,WAAY,EACZC,KAAK,CACH,CACE,OACA,CAAEjB,KAAM,WAAYS,UAAW,SAC/B,CAAET,KAAM,MAAOS,UAAW,SAC1B,CAAET,KAAM,OAAQS,UAAW,SAC3B,CAAET,KAAM,SAAUS,UAAW,WAN7B,mBAQCtD,KAGP+D,OAAQ,wBAIZ,SAASlF,EAAgBpB,GACvB,OAAiB,IAAVA,EAAc,EAAGA,EAG1B,SAASmE,EAAWjB,GAClB,IAAIqD,EAAQrD,EAAOlC,UAAUC,QAAO,SAACC,EAAKC,GACxC,OAAOD,EAAME,EAAgBD,EAASE,UAAYF,EAASG,KAAOF,EAAgBD,EAASI,OAC1F,GACH,MAAO,CACL2E,MAAO,CACLC,OAAQ,CAAC,IAAK,OACdE,KAAM,CACJ,CACE,CACEjB,KAAM,QACNG,OAAQ,CAAC,EAAG,GAAI,EAAG,GACnBM,UAAW,SAEb,CACET,KAAK,GAAD,OAAKmB,EAAMP,QAAQ,GAAnB,YAAyB9C,EAAOd,UACpCmD,OAAQ,CAAC,EAAG,GAAI,EAAG,GACnBM,UAAW,YAKnBS,OAAQ,YACRf,OAAQ,CAAC,EAAG,EAAG,EAAG,KAKtB,SAASxB,EAAmBb,GAC1B,IAAIU,EAAS,GAcb,OAbAR,QAAQC,IAAI,SAAUH,GAClBA,EAAOsD,QACT5C,EAASA,EAAO6C,OAAO,CACrB,CAAErB,KAAM,SACR,CAAEA,KAAMlC,EAAOsD,MAAOjB,OAAQ,CAAC,EAAG,EAAG,EAAG,QAGxCrC,EAAOwD,QACT9C,EAASA,EAAO6C,OAAO,CACrB,CAAErB,KAAM,SACR,CAAEA,KAAMlC,EAAOwD,MAAOnB,OAAQ,CAAC,EAAG,EAAG,EAAG,QAGrC3B,EAoBT,SAASuB,EAAejC,GACtB,IAAIU,EAAS,GAMb,OALIV,EAAOC,WACTS,EAAOoB,KAAK,CACV2B,MAAOzD,EAAOC,YAGXS,ECpNaa,OAAOmC,KAAKC,WAAlC,IAEMC,EAAa,CACfnB,cAAe,GACfN,SAAU,gCACVG,SAAS,YACTC,QAAQ,wBACRtC,UAAW,KACX0B,aAAc,KACdzC,SAAU,MACVsD,OAAQ,GACRd,KAAM,GACNE,QAAS,KACT9D,UAAW,GACXwF,MAAO,KACPE,MAAO,MA8MIK,MA3Mf,WAAgB,IAAD,EAC+BC,mBAASF,GADxC,mBACJG,EADI,KACWC,EADX,OC1BA,SACb1F,GAEgB,IADhB2F,EACe,uDADQ,GACR,EACUC,IAAMJ,UAAS,WACtC,IAAIhH,EAGJ,IACEA,EAAQqH,KAAKC,MAAMC,aAAaC,QAAQhG,IAAQ,IAChD,MAAOiG,GACPzH,EAAQuH,aAAaC,QAAQhG,GAQ/B,OALAxB,EAAQA,GAASmH,EACjBI,aAAaG,QACXlG,EACiB,kBAAVxB,EAAqBA,EAAQqH,KAAKM,UAAU3H,IAE9CA,KAhBM,mBACR4H,EADQ,KACFC,EADE,KAmBTH,EAAU,SAACI,GACfD,EAASC,GACTP,aAAaG,QACXlG,EACoB,kBAAbsG,EAAwBA,EAAWT,KAAKM,UAAUG,KAI7D,MAAO,CAACF,EAAMF,GDF8BK,CACtC,iBACA,IAJO,mBAEJC,EAFI,KAEWC,EAFX,KAOX,SAASC,EAAmBC,EAAchI,GACtC,IAAIiI,EAASjI,EAAMK,OAAOR,MACtBqI,EAAc,GAClBA,EAAYF,GAAgBC,EAC5BlB,EAAiB,2BACVD,GACAoB,IAuGX,OACI,yBAAKC,UAAU,OACX,6BACI,kBAAC,IAAD,8CACA,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMC,YAAU,GACZ,kBAAC,IAAD,CAAWC,UAAU,iBACjB,kBAAC,IAAD,CAAKC,eAAgBC,IAAcjH,GAAI,GAAvC,aAGA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,IAAD,CACIC,KAAK,OACL1B,MAAOiH,EAActB,cACrB/D,SAAUsG,EAAmBrG,KAAKzB,KAAM,qBAkBpD,kBAAC,IAAD,CAAWoI,UAAU,UACjB,kBAAC,IAAD,CAAKC,eAAgBC,IAAcjH,GAAI,GAAvC,WAGA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,IAAD,CACIgH,eAAe,WACfE,KAAK,IACLC,YAAY,0BACZ5I,MAAOiH,EAAcvB,OACrB9D,SAAUsG,EAAmBrG,KAAKzB,KAAM,cAIpD,kBAAC,IAAD,CAAWoI,UAAU,QACjB,kBAAC,IAAD,CAAKC,eAAgBC,IAAcjH,GAAI,GAAvC,QAGA,kBAAC,IAAD,CAAKA,GAAI,GACL,kBAAC,IAAD,CACIC,KAAK,OACL1B,MAAOiH,EAAcrC,KACrBhD,SAAUsG,EAAmBrG,KAAKzB,KAAM,YAIpD,kBAAC,EAAD,CACIY,UAAWiG,EAAcjG,UACzBoB,SAAU6E,EAAc7E,SACxB9B,4BAvJxB,SAAqC4C,GACjC,IAAIlC,EAAYiG,EAAcjG,UACfA,EAAUkC,EAAOhD,OACvByB,YAAcuB,EAAO3C,eAC9B2G,EAAiB,2BACVD,GADS,IAEZjG,UAAWA,MAkJKP,yBA9IxB,SAAkCyC,GAC9B,IAAIlC,EAAYiG,EAAcjG,UACfA,EAAUkC,EAAOhD,OACvBmB,SAAW6B,EAAOxC,YAC3BwG,EAAiB,2BACVD,GADS,IAEZjG,UAAWA,MAyIKL,oBArIxB,SAA6BuC,GACzB,IAAIlC,EAAYiG,EAAcjG,UACfA,EAAUkC,EAAOhD,OACvBqB,IAAM2B,EAAOtC,OACtBsG,EAAiB,2BACVD,GADS,IAEZjG,UAAWA,MAgIKH,qBA5HxB,SAA8BqC,GAC1B,IAAIlC,EAAYiG,EAAcjG,UACfA,EAAUkC,EAAOhD,OACvBoB,KAAO4B,EAAOpC,QACvBoG,EAAiB,2BACVD,GADS,IAEZjG,UAAWA,MAuHKD,sBAnHxB,SAA+BmC,GAC3B,IAAIlC,EAAYiG,EAAcjG,UAC9BA,EAAU6H,OAAO3F,EAAOhD,MAAO,GAC/BgH,EAAiB,2BACVD,GADS,IAEZjG,UAAWA,MA+GK4B,mBA3GxB,WACI,IAAI5B,EAAYiG,EAAcjG,UAC9BA,EAAUgE,KAAK,CACXrD,YAAa,GACbN,SAAU,EACVE,IAAK,EACLD,KAAM,IAEV4F,EAAiB,2BACVD,GADS,IAEZjG,UAAWA,UAqGP,yBAAKsH,UAAU,oBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAK7G,GAAI,GACL,kBAAC,IAAD,CAAQa,QApGhC,WACI4E,EAAiBJ,KAmGG,eAEJ,kBAAC,IAAD,CAAKgC,SAAU,EAAGrH,GAAI,GAClB,kBAAC,IAAD,CAAQa,QAvFhC,WACIW,EAAegE,GACV8B,YAAO9B,EAAee,EAAc,KACrCC,EAAiB,CAAChB,GAAF,mBAAoBe,EAAcgB,MAAM,EAAG,QAoFX3G,QAAQ,WAAxC,wB,OExN5B4G,IAASC,OACP,kBAAC,EAAD,MACAtJ,SAASuJ,eAAe,W","file":"static/js/main.1ba82ed0.chunk.js","sourcesContent":["const textArea = document.createElement('textarea');\nexport default function(encoded) {\n  textArea.innerHTML = encoded;\n  return textArea.value;\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {Button, Col, FormControl, Row} from 'react-bootstrap';\n\nimport {format, symbols} from 'currencyformatter.js';\nimport decode from './decode.js';\n\nconst currencyCodes = Object.keys(symbols);\n\nclass LineItemList extends Component {\n    onLineItemDescriptionChange(index, event) {\n        this.props.onLineItemDescriptionChange({\n            index: index,\n            newDescription: event.target.value,\n        });\n    }\n\n    onLineItemQuantityChange(index, event) {\n        this.props.onLineItemQuantityChange({\n            index: index,\n            newQuantity: event.target.value,\n        });\n    }\n\n    onLineItemMtsChange(index, event) {\n        this.props.onLineItemMtsChange({\n            index: index,\n            newMts: event.target.value,\n        });\n    }\n\n    onLineItemRateChange(index, event) {\n        this.props.onLineItemRateChange({\n            index: index,\n            newRate: event.target.value,\n        });\n    }\n\n    onLineItemDeleteClick(index) {\n        this.props.onLineItemDeleteClick({\n            index: index,\n        });\n    }\n\n    getLineItemsTotal(lineItems) {\n        return lineItems.reduce((sum, lineItem) => {\n            return sum + this.setDefaultValue(lineItem.quantity) * lineItem.rate * this.setDefaultValue(lineItem.mts);\n        }, 0);\n    }\n\n    setDefaultValue(value){\n        return value === 0 ? 1: value;\n    }\n\n    renderLineItemRow(lineItem, index) {\n        return (\n            <Row key={index}>\n                <Col sm={5}>\n                    <FormControl\n                        type=\"text\"\n                        value={lineItem.description}\n                        onChange={this.onLineItemDescriptionChange.bind(this, index)}\n                    />\n                </Col>\n                <Col sm={1} style={{paddingLeft: '7px', paddingRight: '7px'}}>\n                    <FormControl\n                        type=\"number\"\n                        min={1}\n                        value={lineItem.quantity}\n                        onChange={this.onLineItemQuantityChange.bind(this, index)}\n                    />\n                </Col>\n                <Col sm={1} style={{paddingLeft: '7px', paddingRight: '7px'}}>\n                    <FormControl\n                        type=\"number\"\n                        min={1}\n                        value={lineItem.mts}\n                        onChange={this.onLineItemMtsChange.bind(this, index)}\n                    />\n                </Col>\n                <Col sm={2} style={{paddingLeft: '7px', paddingRight: '7px'}}>\n                    <FormControl\n                        type=\"number\"\n                        min={1}\n                        value={lineItem.rate}\n                        onChange={this.onLineItemRateChange.bind(this, index)}\n                    />\n                </Col>\n                <Col sm={2}>\n                    {decode(\n                        format(this.setDefaultValue(lineItem.mts) * this.setDefaultValue(lineItem.quantity) *\n                            lineItem.rate, {\n                            currency: this.props.currency\n                        })\n                    )}\n                </Col>\n                <Col sm={1}>\n                    <Button\n                        bsStyle=\"danger\"\n                        onClick={this.onLineItemDeleteClick.bind(this, index)}\n                    >\n                        X\n                    </Button>\n                </Col>\n            </Row>\n        );\n    }\n\n    render() {\n        let lineItems = this.props.lineItems;\n        let lineItemRows = lineItems.map(this.renderLineItemRow.bind(this));\n        let lineItemsTotal = this.getLineItemsTotal(lineItems);\n        return (\n            <div>\n                <Row>\n                    <Col sm={5}>Item</Col>\n                    <Col sm={1}>Quantity</Col>\n                    <Col sm={1}>Mts</Col>\n                    <Col sm={2}>Rate</Col>\n                    <Col sm={2}>Amount</Col>\n                    <Col sm={1}/>\n                </Row>\n                {lineItemRows}\n                <Row>\n                    <Col sm={7}>\n                        <Button bsStyle=\"success\" onClick={this.props.onLineItemAddClick}>\n                            + Add Line Item\n                        </Button>\n                    </Col>\n                    <Col sm={1}/>\n                    <Col sm={1}/>\n                    <Col sm={1}>Total</Col>\n                    <Col sm={1}>\n                        {decode(format(lineItemsTotal, {currency: this.props.currency}))}\n                    </Col>\n                    <Col sm={1}/>\n                </Row>\n            </div>\n        );\n    }\n}\n\nLineItemList.propTypes = {\n    currency: PropTypes.oneOf(currencyCodes),\n    lineItems: PropTypes.array,\n    onLineItemDescriptionChange: PropTypes.func,\n    onLineItemQuantityChange: PropTypes.func,\n    onLineItemMtsChange: PropTypes.func,\n    onLineItemRateChange: PropTypes.func,\n    onLineItemDeleteClick: PropTypes.func,\n};\n\nLineItemList.defaultProps = {\n    lineItems: [],\n};\n\nexport default LineItemList;\n","const pdfMake = window.pdfMake;\n\nexport function saveInvoicePDF(params) {\n  if (params.imageLogo) {\n    console.log('imageLogo', params.imageLogo);\n    let fileReader = new FileReader();\n    fileReader.addEventListener(\n      'load',\n      onDataURLLoaded.bind(null, params, fileReader),\n      false,\n    );\n    fileReader.readAsDataURL(params.imageLogo);\n  } else {\n    createPDFFromParams(params);\n  }\n}\n\n// Private functions\nfunction onDataURLLoaded(params, fileReader) {\n  // Set imageLogo to data URI of file\n  params.imageLogo = fileReader.result;\n  createPDFFromParams(params);\n}\n\nfunction createPDFFromParams(params) {\n  let docDefinition = buildDocDefinition(params);\n  pdfMake.createPdf(docDefinition).open();\n}\n\nfunction buildDocDefinition(params) {\n  let notesAndTerms = buildNotesAndTerms(params);\n  console.log('notesAndTerms', notesAndTerms);\n  return {\n    content: [\n      buildHeaderInformation(params),\n      buildLineItemsTable(params),\n      buildTotal(params),\n      ...buildNotesAndTerms(params),\n    ],\n  };\n}\n\nfunction buildHeaderInformation(params) {\n  const optionalDataKeys = [];\n  const optionalDataValues = [];\n\n  Object.entries({\n    Date: params.date,\n    'Payment Terms': params.paymentTerms,\n    'Due Date': params.dueDate,\n  }).forEach(([key, value]) => {\n    if (value) {\n      optionalDataKeys.push(key);\n      optionalDataValues.push(value);\n    }\n  });\n\n  return {\n    columns: [\n      {\n        stack: [\n          ...buildImageLogo(params),\n          {\n            text: params.fromName,\n            fontSize: 15,\n            margin: [0, 0, 0, 0],\n          },\n          {\n            text: params.fromTown,\n            fontSize: 15,\n            margin: [0, 0, 0, 0],\n          },\n          {\n            text: params.fromGst,\n            fontSize: 10,\n            margin: [0, 0, 30, 0],\n          },\n          {\n            text: 'Bill To',\n            margin: [0, 30, 0, 0],\n          },\n          {\n            text: params.toName,\n          },\n        ],\n      },\n      {\n        stack: [\n          {\n            text: 'INVOICE',\n            fontSize: 15,\n          },\n          {\n            text: `# ${params.invoiceNumber}`,\n            fontSize: 10,\n            margin: [0, 0, 0, 30],\n          },\n          {\n            columns: [\n              {\n                width: 50,\n                text: '',\n              },\n              {\n                width: '*',\n                columns: [\n                  {\n                    stack: optionalDataKeys,\n                    alignment: 'right',\n                  },\n                  {\n                    stack: optionalDataValues,\n                    alignment: 'right',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        alignment: 'right',\n      },\n    ],\n    // optional space between columns\n    columnGap: 10,\n    margin: [0, 0, 0, 30],\n  };\n}\n\nfunction buildLineItemsTable(params) {\n  let lineItemRows = params.lineItems.map(buildLineItem(params));\n  return {\n    table: {\n      widths: ['*','11%','11%','11%', '18%'],\n      headerRows: 1,\n      body: [\n        [\n          'Item',\n          { text: 'Quantity', alignment: 'right' },\n          { text: 'Mts', alignment: 'right' },\n          { text: 'Rate', alignment: 'right' },\n          { text: 'Amount', alignment: 'right' },\n        ],\n        ...lineItemRows,\n      ],\n    },\n    layout: 'lightHorizontalLines',\n  };\n}\n\nfunction setDefaultValue(value){\n  return value === 0 ? 1: value;\n}\n\nfunction buildTotal(params) {\n  let total = params.lineItems.reduce((sum, lineItem) => {\n    return sum + setDefaultValue(lineItem.quantity) * lineItem.rate * setDefaultValue(lineItem.mts);\n  }, 0);\n  return {\n    table: {\n      widths: ['*', '18%'],\n      body: [\n        [\n          {\n            text: 'Total',\n            margin: [0, 20, 0, 0],\n            alignment: 'right',\n          },\n          {\n            text: `${total.toFixed(2)} ${params.currency}`,\n            margin: [0, 20, 0, 0],\n            alignment: 'right',\n          },\n        ],\n      ],\n    },\n    layout: 'noBorders',\n    margin: [0, 0, 0, 30],\n  };\n}\n\n// Returns an array\nfunction buildNotesAndTerms(params) {\n  let result = [];\n  console.log('params', params);\n  if (params.notes) {\n    result = result.concat([\n      { text: 'Notes' },\n      { text: params.notes, margin: [0, 0, 0, 30] },\n    ]);\n  }\n  if (params.terms) {\n    result = result.concat([\n      { text: 'Terms' },\n      { text: params.terms, margin: [0, 0, 0, 30] },\n    ]);\n  }\n  return result;\n}\n\nfunction buildLineItem(params) {\n  return function buildLineItemCurried(lineItem) {\n    return [\n      lineItem.description,\n      { text: String(lineItem.quantity), alignment: 'right' },\n      { text: String(lineItem.mts), alignment: 'right' },\n      { text: `${lineItem.rate}`, alignment: 'right' },\n      {\n        text: `${(lineItem.quantity * lineItem.rate * lineItem.mts).toFixed(2)} ${\n          params.currency\n        }`,\n        alignment: 'right',\n      },\n    ];\n  };\n}\n\nfunction buildImageLogo(params) {\n  let result = [];\n  if (params.imageLogo) {\n    result.push({\n      image: params.imageLogo,\n    });\n  }\n  return result;\n}\n","import React, {useState} from 'react';\nimport {Button, Col, ControlLabel, Form, FormControl, FormGroup, PageHeader,} from 'react-bootstrap';\nimport {symbols} from 'currencyformatter.js';\nimport dequal from 'dequal';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.css';\nimport LineItemList from './LineItemList.js';\nimport {saveInvoicePDF} from './PDFService.js';\nimport useLocalStorage from './useLocalStorage.ts';\n\nconst currencyCodes = Object.keys(symbols);\n\nconst emptyState = {\n    invoiceNumber: '',\n    fromName: 'Lakshmi Readymades & Agencies',\n    fromTown:'Palamaner',\n    fromGst:'GSTIN:37ACBPP0224C1Z8',\n    imageLogo: null,\n    paymentTerms: null,\n    currency: 'INR',\n    toName: '',\n    date: '',\n    dueDate: null,\n    lineItems: [],\n    notes: null,\n    terms: null,\n};\n\nfunction App() {\n    const [editedInvoice, setEditedInvoice] = useState(emptyState);\n    const [historyStates, setHistoryStates] = useLocalStorage(\n        'invoiceHistory',\n        [],\n    );\n\n    function onFieldValueChange(propertyName, event) {\n        let newVal = event.target.value;\n        let stateUpdate = {};\n        stateUpdate[propertyName] = newVal;\n        setEditedInvoice({\n            ...editedInvoice,\n            ...stateUpdate,\n        });\n    }\n\n    function onImageLogoChange(event) {\n        let files = event.target.files;\n        let stateUpdate = {};\n        if (files.length > 0) {\n            stateUpdate.imageLogo = files[0];\n        }\n        setEditedInvoice({...editedInvoice, ...stateUpdate});\n    }\n\n    function onLineItemDescriptionChange(params) {\n        let lineItems = editedInvoice.lineItems;\n        let lineItem = lineItems[params.index];\n        lineItem.description = params.newDescription;\n        setEditedInvoice({\n            ...editedInvoice,\n            lineItems: lineItems,\n        });\n    }\n\n    function onLineItemQuantityChange(params) {\n        let lineItems = editedInvoice.lineItems;\n        let lineItem = lineItems[params.index];\n        lineItem.quantity = params.newQuantity;\n        setEditedInvoice({\n            ...editedInvoice,\n            lineItems: lineItems,\n        });\n    }\n\n    function onLineItemMtsChange(params) {\n        let lineItems = editedInvoice.lineItems;\n        let lineItem = lineItems[params.index];\n        lineItem.mts = params.newMts;\n        setEditedInvoice({\n            ...editedInvoice,\n            lineItems: lineItems,\n        });\n    }\n\n    function onLineItemRateChange(params) {\n        let lineItems = editedInvoice.lineItems;\n        let lineItem = lineItems[params.index];\n        lineItem.rate = params.newRate;\n        setEditedInvoice({\n            ...editedInvoice,\n            lineItems: lineItems,\n        });\n    }\n\n    function onLineItemDeleteClick(params) {\n        let lineItems = editedInvoice.lineItems;\n        lineItems.splice(params.index, 1);\n        setEditedInvoice({\n            ...editedInvoice,\n            lineItems: lineItems,\n        });\n    }\n\n    function onLineItemAddClick() {\n        let lineItems = editedInvoice.lineItems;\n        lineItems.push({\n            description: '',\n            quantity: 0,\n            mts: 0,\n            rate: 0,\n        });\n        setEditedInvoice({\n            ...editedInvoice,\n            lineItems: lineItems,\n        });\n    }\n\n    function onClearFormClick() {\n        setEditedInvoice(emptyState);\n    }\n\n    function onRemoveImageClick() {\n        // Clear out the input file element\n        let inputElem = document.getElementById('imageLogo');\n        inputElem.value = '';\n\n        // Clear out the imageLogo on the state\n        setEditedInvoice({\n            ...editedInvoice,\n            imageLogo: null,\n        });\n    }\n\n    function onSubmitClick() {\n        saveInvoicePDF(editedInvoice);\n        if (!dequal(editedInvoice, historyStates[0])) {\n            setHistoryStates([editedInvoice, ...historyStates.slice(0, 24)]);\n        }\n    }\n\n    function onHistoryStateClick(historyState) {\n        setEditedInvoice(historyState);\n    }\n\n    return (\n        <div className=\"App\">\n            <div>\n                <PageHeader>Lakshmi Readymades & Agencies Invoice</PageHeader>\n                <div className=\"App-invoice\">\n                    <Form horizontal>\n                        <FormGroup controlId=\"invoiceNumber\">\n                            <Col componentClass={ControlLabel} sm={2}>\n                                Invoice #\n                            </Col>\n                            <Col sm={10}>\n                                <FormControl\n                                    type=\"text\"\n                                    value={editedInvoice.invoiceNumber}\n                                    onChange={onFieldValueChange.bind(this, 'invoiceNumber')}\n                                />\n                            </Col>\n                        </FormGroup>\n                        {/*                        <FormGroup controlId=\"imageLogo\">\n                            <Col componentClass={ControlLabel} sm={2}>\n                                Logo\n                            </Col>\n                            <Col sm={10}>\n                                <FormControl\n                                    type=\"file\"\n                                    onChange={onImageLogoChange.bind(this)}\n                                />\n                                {editedInvoice.imageLogo ? (\n                                    <button onClick={onRemoveImageClick}>Remove image</button>\n                                ) : null}\n                            </Col>\n                        </FormGroup>*/}\n                        <FormGroup controlId=\"toName\">\n                            <Col componentClass={ControlLabel} sm={2}>\n                                Bill To\n                            </Col>\n                            <Col sm={10}>\n                                <FormControl\n                                    componentClass=\"textarea\"\n                                    rows=\"3\"\n                                    placeholder=\"Who is this invoice to?\"\n                                    value={editedInvoice.toName}\n                                    onChange={onFieldValueChange.bind(this, 'toName')}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <FormGroup controlId=\"date\">\n                            <Col componentClass={ControlLabel} sm={2}>\n                                Date\n                            </Col>\n                            <Col sm={3}>\n                                <FormControl\n                                    type=\"date\"\n                                    value={editedInvoice.date}\n                                    onChange={onFieldValueChange.bind(this, 'date')}\n                                />\n                            </Col>\n                        </FormGroup>\n                        <LineItemList\n                            lineItems={editedInvoice.lineItems}\n                            currency={editedInvoice.currency}\n                            onLineItemDescriptionChange={onLineItemDescriptionChange}\n                            onLineItemQuantityChange={onLineItemQuantityChange}\n                            onLineItemMtsChange={onLineItemMtsChange}\n                            onLineItemRateChange={onLineItemRateChange}\n                            onLineItemDeleteClick={onLineItemDeleteClick}\n                            onLineItemAddClick={onLineItemAddClick}\n                        />\n                    </Form>\n                </div>\n                <div className=\"Footer-Container\">\n                    <div className=\"Footer\">\n                        <Col sm={2}>\n                            <Button onClick={onClearFormClick}>Clear Form</Button>\n                        </Col>\n                        <Col smOffset={8} sm={2}>\n                            <Button onClick={onSubmitClick} bsStyle=\"primary\">\n                                Create Invoice\n                            </Button>\n                        </Col>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// From https://github.com/dance2die/react-use-localstorage\nimport React from 'react';\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string = '',\n): [string, any] {\n  const [item, setValue] = React.useState(() => {\n    let value;\n\n    // Try to parse the value and fall back to value\n    try {\n      value = JSON.parse(localStorage.getItem(key) || '');\n    } catch (err) {\n      value = localStorage.getItem(key);\n    }\n\n    value = value || initialValue;\n    localStorage.setItem(\n      key,\n      typeof value === 'string' ? value : JSON.stringify(value),\n    );\n    return value;\n  });\n\n  const setItem = (newValue: any) => {\n    setValue(newValue);\n    localStorage.setItem(\n      key,\n      typeof newValue === 'string' ? newValue : JSON.stringify(newValue),\n    );\n  };\n\n  return [item, setItem];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}